name: Create Docker Image CI V6 1735

on:
  workflow_dispatch:
    inputs:
      quay_registry_username:
        description: 'Username'
        required: true
      quay_registry_password:
        description: 'Password'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      TAG_MAJOR_VERSION: 1
      TAG_MINOR_VERSION: 1
      TAG_PATCH_VERSION: 0
      URL_SLACK_BACKEND_API: "https://quay.io/api/v1/repository/ocp_sustaining_engineering/slack_backend/tag/"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # set up the next tag name for the Docker Image
    # e.g. if there are 24 previous images starting with the tag name "1.1." and none have been deleted,  
    # the next tag name will be 1.1.25
    - name: Get Next Tag Version
      run: |
        JSON_RESPONSE=$(curl -s "$URL_SLACK_BACKEND_API")
        COUNT_EXISTING=$(echo "$JSON_RESPONSE" | jq '.tags| map(select(.expiration | not)) | map(.name) | map(select(startswith("${{ env.TAG_MAJOR_VERSION }}.${{ env.TAG_MINOR_VERSION }}"))) | length')
        if [ "$COUNT_EXISTING" -eq 0 ]; then
            echo "There are no docker images with version numbers that start with ${{ env.TAG_MAJOR_VERSION }}.${{ env.TAG_MINOR_VERSION }}."
            NEXT_TAG_VERSION="${{ env.TAG_MAJOR_VERSION }}.${{ env.TAG_MINOR_VERSION }}.${{ env.TAG_PATCH_VERSION }}"
        else
            echo "There are $COUNT_EXISTING docker images with version numbers that start with ${{ env.TAG_MAJOR_VERSION }}.${{ env.TAG_MINOR_VERSION }}"
            NEXT_TAG_VERSION=$(echo "$JSON_RESPONSE" |jq -r '.tags | map(select(.expiration | not)) | map(.name)| map(select(startswith("${{ env.TAG_MAJOR_VERSION }}.${{ env.TAG_MINOR_VERSION }}.") and test("^${{ env.TAG_MAJOR_VERSION }}\\.${{ env.TAG_MINOR_VERSION }}\\.\\d+$"))) | map(split(".") | .[2] | tonumber) | max + 1 | "${{ env.TAG_MAJOR_VERSION }}.${{ env.TAG_MINOR_VERSION }}.\(.)"')
        fi        
        echo "NEXT_TAG_VERSION=$NEXT_TAG_VERSION" >> $GITHUB_ENV
        echo "Computed image version: $NEXT_TAG_VERSION"

    - name: Build the Docker image
      run: |
        IMAGE_NAME=quay.io/ocp_sustaining_engineering/slack_backend:${{ env.NEXT_TAG_VERSION }}
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "Building $IMAGE_NAME .."
        docker build -t $IMAGE_NAME .

    - name: Mask Values and Login
      shell: bash
      run: |
        QUAY_PASSWORD=$(jq -r '.inputs.quay_registry_password' $GITHUB_EVENT_PATH)
        echo ::add-mask::$QUAY_PASSWORD
        QUAY_USERNAME=$(jq -r '.inputs.quay_registry_username' $GITHUB_EVENT_PATH)
        echo ::add-mask::QUAY_USERNAME
        echo "$QUAY_PASSWORD" | docker login quay.io -u $QUAY_USERNAME --password-stdin 2>/dev/null

    - name: Push Docker image
      run: |
        echo "Pushing ${{ env.IMAGE_NAME }} .."
        docker push ${{ env.IMAGE_NAME }} 
        echo "Pushed ${{ env.IMAGE_NAME }}"

    - name: Logout
      run: |
        docker logout quay.io